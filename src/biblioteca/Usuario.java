package biblioteca;

import java.io.Serializable;

/**
 * Classe base para representar um usu√°rio no sistema da biblioteca.
 * Implementa Serializable para persist√™ncia de dados.
 */
public abstract class Usuario implements Serializable {
    private String nome;
    private String email;
    private String senha;
    private boolean bloqueado;

    /**
     * Construtor da classe Usuario.
     * 
     * @param nome  Nome do usu√°rio
     * @param email Email do usu√°rio
     * @param senha Senha do usu√°rio
     */
    public Usuario(String nome, String email, String senha) {
        this.nome = nome;
        this.email = email;
        this.senha = senha;
        this.bloqueado = false; // Usu√°rio come√ßa sem bloqueio
    }

    /**
     * Obt√©m o nome do usu√°rio.
     * 
     * @return Nome do usu√°rio.
     */
    public String getNome() {
        return nome;
    }

    /**
     * Define um novo nome para o usu√°rio.
     * 
     * @param nome Novo nome do usu√°rio.
     */
    public void setNome(String nome) {
        this.nome = nome;
    }

    /**
     * Obt√©m o email do usu√°rio.
     * 
     * @return Email do usu√°rio.
     */
    public String getEmail() {
        return email;
    }

    /**
     * Define um novo email para o usu√°rio.
     * 
     * @param email Novo email do usu√°rio.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Obt√©m a senha do usu√°rio.
     * 
     * @return Senha do usu√°rio.
     */
    public String getSenha() {
        return senha;
    }

    /**
     * Define uma nova senha para o usu√°rio.
     * 
     * @param senha Nova senha do usu√°rio.
     */
    public void setSenha(String senha) {
        this.senha = senha;
    }

    /**
     * Verifica se o usu√°rio est√° bloqueado.
     * 
     * @return true se estiver bloqueado, false caso contr√°rio.
     */
    public boolean isBloqueado() {
        return bloqueado;
    }

    /**
     * Define se o usu√°rio est√° bloqueado ou n√£o.
     * 
     * @param bloqueado Estado de bloqueio do usu√°rio.
     */
    public void setBloqueado(boolean bloqueado) {
        this.bloqueado = bloqueado;
    }

    /**
     * M√©todo abstrato para obter o limite m√°ximo de empr√©stimos de cada tipo de usu√°rio.
     * Esse m√©todo deve ser implementado pelas classes filhas (Aluno, Professor).
     * 
     * @return O limite m√°ximo de empr√©stimos permitido para esse usu√°rio.
     */
    public abstract int getLimiteEmprestimos();

    /**
     * Representa√ß√£o textual do usu√°rio.
     * 
     * @return String formatada com informa√ß√µes b√°sicas do usu√°rio.
     */
    @Override
    public String toString() {
        return "üë§ Usu√°rio: " + nome + " | ‚úâÔ∏è Email: " + email + " | üîí Bloqueado: " + (bloqueado ? "Sim" : "N√£o");
    }
}
